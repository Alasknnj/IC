#include <ros/ros.h>
#include <laser_assembler/AssembleScans.h>
int main(int argc, char **argv)
{
  ros::init(argc, argv, "laser_map_receiver");
  ros::NodeHandle n;
  ros::service::waitForService("assemble_scans");
  ros::ServiceClient client = n.serviceClient<laser_assembler::AssembleScans>("assemble_scans");
  laser_assembler::AssembleScans srv;
  ros::Publisher pub = n.advertise<sensor_msgs::PointCloud>("agregatedMap",1);

  ros::Rate r(1);
  while(ros::ok()){
    r.sleep();
    srv.request.begin = ros::Time(0,0);
    srv.request.end   = ros::Time::now();
    if (client.call(srv))
      printf("Got cloud with %u points\n", srv.response.cloud.points.size());
    else
      printf("Service call failed\n");
    
    pub.publish(srv.response.cloud);
  }


  return 0;
}
